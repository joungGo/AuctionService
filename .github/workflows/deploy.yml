name: Deploy to EC2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  APPLICATION_YML: ${{ secrets.APPLICATION_YML }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Build Docker image
      run: docker build -t bidflow-app .
      
    - name: Save Docker image
      run: docker save bidflow-app | gzip > bidflow-app.tar.gz
      
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml,bidflow-app.tar.gz"
        target: "/home/ubuntu/bidflow"
        
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/bidflow
          
          # Load Docker image
          docker load < bidflow-app.tar.gz
          
          # Set environment variables for Docker Compose
          export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
          export REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"
          
          # Stop and remove existing containers
          docker-compose down
          
          # Start new containers with environment variables
          docker-compose up -d
          
          # Clean up
          rm -f bidflow-app.tar.gz
          
          # Wait for services to be ready
          sleep 30
          
          # Check if services are running
          docker-compose ps
          
          # Show logs for debugging
          docker-compose logs --tail=50 
